apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    project.ext.set("versionMajor", "5")
    project.ext.set("versionMinor", "4")
    project.ext.set("versionRevision", "11")
    project.ext.set("internalReleaseDate", getDate())
    project.ext.set("versionCode","99")
    
    //NOTE: Changing the app name here will cause Jenkins to fail copying to anitfactory.
    //See the build Jenkins -> Configure -> Published Artifacts field
    project.ext.set("appName", "GoRead")

    def version = "${versionMajor}.${versionMinor}.${versionRevision}_${internalReleaseDate}"

    defaultConfig {
        applicationId "org.benetech.android"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode = project.ext.get("versionCode").toInteger()
        versionName = project.ext.get("appName") + " " + "${version}"
        multiDexEnabled true

        ndk {
            moduleName "DeflatingDecompressor-v2"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }

        signingConfigs {
            release {
                Properties signingProperties = new Properties ()
                signingProperties.load ( new FileInputStream (rootProject.file ( "sign.properties") ) )

                android.signingConfigs.release.storeFile file( signingProperties.keyStore )
                android.signingConfigs.release.keyAlias signingProperties.keyAlias
                android.signingConfigs.release.storePassword signingProperties.keyStorePassword
                android.signingConfigs.release.keyPassword signingProperties.keyAliasPassword
            }
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles 'proguard.cfg'
                signingConfig signingConfigs.release
            }
        }

    }

    splits {
        abi {
            enable true
            reset()
            include "armeabi", 'armeabi-v7a', 'x86'
            universalApk true
        }
    }

    def apkFileName = project.ext.get("appName") + "-" + "${version}"
    if (System.getenv("BUILD_NUMBER"))
        apkFileName =  project.ext.get("appName") + "-" + "${version}_" + System.getenv("BUILD_NUMBER")

    project.archivesBaseName = apkFileName

    productFlavors {
        alpha{
            buildConfigField "String", "BOOKSHARE_API_HOST_NAME", '"api.bookshare.org"'
            applicationId "org.benetech.android"
        }
        live{
            buildConfigField "String", "BOOKSHARE_API_HOST_NAME", '"api.bookshare.org"'
            applicationId "org.benetech.android"
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.android.support:design:22.2.0'
    compile 'com.google.guava:guava:13.0.1'
    compile 'com.android.support:appcompat-v7:22.+'
    compile 'com.google.android.gms:play-services-analytics:8.1.0'
    compile 'com.google.android.gms:play-services:8.1.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:recyclerview-v7:22.0.0'
    compile "com.daimajia.swipelayout:library:1.2.0@aar"

    compile files('libs/bugsense3.4.jar')
    compile files('libs/commons-codec-1.4.jar')
    compile files('libs/commons-io-2.4.jar')
    compile files('libs/jmdns.jar')
    compile files('libs/zip4j_1.1.7.jar')

    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.0"
    testCompile "org.robolectric:shadows-multidex:3.0"
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('MM-dd-yyyy')

    return formattedDate
}
