How to Build for Android
------------------------

Prerequisites:

1. Android SDK >= 4.03

2. Android NDK >= r4b

3. Apache Ant >= 1.7.0

4. (Windows-only) Cygwin >= 1.7

For those who use Eclipse for Android development (most of you), jump to Part B

To build:

1. Create 'local.properties' file containing sdk.dir && ndk.dir definitions:
	sdk.dir=<path to the Android SDK folder>
	ndk.dir=<path to the Android NDK folder>
E.g., on my computer 'local.properties' consists of 2 lines:
  sdk.dir=/Users/geometer/android-sdk-mac_86
  ndk.dir=/Users/geometer/android-ndk-r4b

2. You will have to edit src/org/geometerplus/android/fbreader/network/bookshare/BookshareDeveloperKey and enter your
   Bookshare developer key if you want to access the Bookshare library. You can also optionally enter your Bugsense key
   to get crash reports.

3. You will have to edit src/org/geometerplus/android/fbreader/network/bookshare/socialnetworks/SocialNetworkKeys. 
   To work with Facebook sharing features, create an App with Facebook Developer Account and obtain Access Token and
   Application Id,. For Twitter sharing features, you will need to create a Twitter app and obtain Consumer Key and Consumer Secret.
   Then populate respective fields in SocialNetworkKeys class with those information.

4. If you use Linux or MacOS, just run 'ant clean debug' to create an installable package that will provide debugging info.

If you are Windows user
  2a. Run ndk-build (a program from Android NDK directory) in your project catalog;
      This program only runs from Cygwin >= 1.7, please read NDK docs for details.
      Read and try config cygwin using 'cygwin_installation_and_configuration.pdf'
  2b. Run 'ant release'.

4. Sign your package manually.

------------------------------------------------------------------------------------------------------
Part B
------------------------------------------------------------------------------------------------------

1. Download the project code from git onto your local drive "git clone git://github.com/benetech/FBReaderJ.git".
2. Change the local.properties file to point to your Android SDK and NDK installations.
3. If you are running Linux or Mac OS, run "ant package" from inside the project directory containing build.xml. You may get some compile errors around the zip4j and bookshare classes, but don't worry at this point, since we will build with Eclipse. 
   If you are running Windows, 
   - Run ndk-build (a program from Android NDK directory) in your project catalog;
      This program only runs from Cygwin >= 1.7, please read NDK docs for details.
   - Run ./createRawResources.py script.

   Make sure directories res/raw and res/drawable get created and are populated.
   These newly created resource directories are mandatory for creating an Eclipse project.
4. Create a new Android project in Eclipse.
5. Choose create project from existing source. Point to the location of the downloaded code.
6. Put the .jar files in the /libs directory in the build path (present in FBReaderJ directory).  In Eclipse this is best done from FBReader->Properties->Java Build Path->Add JARs for both JAR files.  This step should remove all the errors mentioned in the step 3.
7. To enable use of the Bookshare library, you need to obtain a developer key at http://developer.bookshare.org.  One you have an application key, you need to enter it into org.geometerplus.android.fbreader.network.bookshare.BookshareDeveloperKey.java
8. Build from within Eclipse  or 'ant clean debug' to build an installable .apk file
9. The signed apk will be present in the /bin folder which can be installed on the Android device/emulator.

------------------------------------------------------------------------------------------------------
Part C
------------------------------------------------------------------------------------------------------

1. Setting up for Facebook
- Following link has an in-depth explanation on how to set up the Facebook application 
    https://developers.facebook.com/docs/mobile/android/sso/
- Assign the (App ID/API Key) found from the Application page to the SocialNetworkKeys FACEBOOK_APP_ID variable
- Assign the (ACCESS_TOKEN) from https://developers.facebook.com/tools/explorer by clicking "Get Access Token" to SocialNetworkKeys FACEBOOK_ACCESS_TOKEN

2. Setting up for Twitter
- Go to your https://dev.twitter.com/apps/new and Sign in with your Twitter account
- Enter application name, description, Company, call-back url and click "Create"
- You will be able to see to keys called Consumer Key and Consumer Secret
- Assign those values to SocialNetworkKeys TWITTER_CONSUMER_KEY and TWITTER_CONSUMER_SECRET respectively
- Also the callback url specified on the application settings page, should be assigned to the variable TWITTER_CALLBACK_URL in the SocialNetworkKeys.

Side Notes:
One common reason the build steps mentioned in Part A may fail is because 
the Android SDK and NDK locations in local.properties might not be correct.

Running the ndk-build enables compiles the native part of the code and creates shared object (.so) files.

The Bookshare-API, zip4j_1.1.1.7, and other libraries in /lib should be included in the build path in the Eclipse project.
This shall remove the compilation errors and the apk file will be created after project is built in Eclipse.

